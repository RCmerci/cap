主要类：Template，
传1个参数： html文件路径，这个文件是未处理过的（类似django，里面到处`{{}}`之类的东西）

class Template:
      def render : 传随意键值对，值可以是字典。返回 修改完的html的（字符串？还是StringIO之类的？）
      def __str__    : 不解释
      

模版（引擎？）的大概想法是：
	语法：
		1. 用 `++>`来标记开始， `<++`结束
		2. 语法尽量跟python相似
		3. 不能定义函数，（可以当参数传进去）。。。
		4. 有内建函数 用"!"开头， 如"!XXX"  ;;;; 这条不要了， 都不用加“！”
		5. 有些内建函数parse前执行， 如!insert
	内建函数：
		1. insert(to, part_name):
			插入到 to 的part 部分
		2. provide(part_name)
			配合 insert， 在被插入的html留下坑，part_name是坑名，对应insert的
			参数 part_name.
		3. append(str):
			str加到html中

	其他：
		1. insert 语法：
		   	  ++>insert(to, part)<++
			  HTML_BODY
			  ++>end_insert()<++
	
example:
------------------
Template("xxx.html").render(k1="title", k2="body", k3={"k4":"others", "k5":None})
------------------
 <title>
 ++> k1 <++
 </title>
 <body>++> k2 <++</body>
 <others>++> k3["k4"]<++</others>
 <nnn>
  ++>
 if k3["k5"]:
     !append("Yes")
 else:
     !append("No")
 <++
 </nnn>
 -------------------------------
 output:
 <title>
 title
 </title>
 <body> body </body>
 <others> others </others>
 <nnn>
 No	
 </nnn>




------------------------------
parse部分
－－－－－－－－－－－－－－－－－－
|          | "        | ++>      | <++     | others   | '        |
| html     | html     | template | html    | html     | html     |
| template | dstring  | error    | html    | template | sstring  |
| dstring  | template | dstring  | dstring | dstring  | dstring  |
| sstring  | sstring  | sstring  | sstring | sstring  | template |



-----------------------------
template.render 返回 一个 FinalHTMLpage 实例。
class HtmlPage:
      origin : 最初的preparse返回结果
      ir: 中间处理的表示o
      base: 父 htmlpage 实例
      sub: 子 htmlpage 实例
      provide_place: ++>provide("insert_hole")<++,这类的语句加到这里。这是个 列表。
      insert_place : ++>insert()<++ ,内部元素 是 列表，代表这个 insert处的内容

      def insert__InsertName():
      	  pass
      def scan: 扫一遍 preparse 输出的列表。
      	  	1. insert  => base的值， 一个htmlpage只有一个base
		2. provide => 参数加到 provide_place 里面
		3. 普通 html => 加到最后的insert_place元素里。
		4. 其他 语句 => compile一下，加到最后insert_place元素（之后 exec 之。)
		5. 好像没了把 － －
	        －－－－－－－－－－－－－－－－－－－－
		
      
class FinalHtmlPage(HtmlPage):
      render: 最后html的字符串，父类没有这个方法。父类都是些base.html之类的html页面，
	      不会直接作为最后结果的那种html。

      

      



